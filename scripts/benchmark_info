#!/usr/bin/env python3

import os
import sys
import re

if __name__ == "__main__":
    parent = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    sys.path.insert(0, parent)

    synth_info_file = open("./build/top.tim", "r")

    max_clock_frequency = 0
    logic_cells_used = 0
    carry_cells_used = 0
    ram_cells_used = 0
    dff_cells_used = 0

    lines = synth_info_file.readlines()

    for line in lines:
        if "Max frequency for clock" in line:
            frequency = re.findall("(\\d+\\.\\d\\d) MHz", line)[0]

            if frequency:
                max_clock_frequency = float(frequency)
        elif "logic LUTs" in line:
            logic_cells = re.findall("(\\d+)/\\d+", line)[0]

            if logic_cells:
                logic_cells_used = int(logic_cells)
        elif "carry LUTs" in line:
            carry_cells = re.findall("(\\d+)/\\d+", line)[0]

            if carry_cells:
                carry_cells_used = int(carry_cells)
        elif "RAM LUTs" in line:
            ram_cells = re.findall("(\\d+)/\\d+", line)[0]

            if ram_cells:
                ram_cells_used = int(ram_cells)
        elif "Total DFFs" in line:
            dff_cells = re.findall("(\\d+)/\\d+", line)[0]

            if dff_cells:
                dff_cells_used = int(dff_cells)

    synth_info_file.close()

    benchmark_file = open("benchmark.json", "w")

    benchmark_file.write(
        f"""
        [
            {{
                "name": "Max clock frequency (Fmax)",
                "unit": "MHz",
                "value": "{max_clock_frequency}"
            }},
            {{
                "name": "Device utilisation: (ECP5)",
                "unit": "LUT4",
                "value": "{logic_cells_used}"
            }},
            {{
                "name": "LUTs used as carry: (ECP5)",
                "unit": "LUT",
                "value": "{carry_cells_used}"
            }},
            {{
                "name": "LUTs used as ram: (ECP5)",
                "unit": "LUT",
                "value": "{ram_cells_used}"
            }},
            {{
                "name": "LUTs used as DFF: (ECP5)",
                "unit": "LUT",
                "value": "{dff_cells_used}"
            }}
        ]"""
    )

    benchmark_file.close()
