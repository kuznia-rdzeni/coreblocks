"""
This type stub file was generated by pyright.
"""

from collections import OrderedDict

__all__ = ["Pins", "PinsN", "DiffPairs", "DiffPairsN", "Attrs", "Clock", "Subsignal", "Resource", "Connector"]
class Pins:
    def __init__(self, names, *, dir=..., invert=..., conn=..., assert_width=...) -> None:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def __iter__(self): # -> Iterator[str]:
        ...
    
    def map_names(self, mapping, resource): # -> list[Unknown]:
        ...
    
    def __repr__(self): # -> str:
        ...
    


def PinsN(*args, **kwargs): # -> Pins:
    ...

class DiffPairs:
    def __init__(self, p, n, *, dir=..., invert=..., conn=..., assert_width=...) -> None:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def __iter__(self): # -> zip[tuple[str, str]]:
        ...
    
    def __repr__(self): # -> str:
        ...
    


def DiffPairsN(*args, **kwargs): # -> DiffPairs:
    ...

class Attrs(OrderedDict):
    def __init__(self, **attrs) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class Clock:
    def __init__(self, frequency) -> None:
        ...
    
    @property
    def period(self): # -> float:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class Subsignal:
    def __init__(self, name, *args) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class Resource(Subsignal):
    @classmethod
    def family(cls, name_or_number, number=..., *, ios, default_name, name_suffix=...): # -> Self@Resource:
        ...
    
    def __init__(self, name, number, *args) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    


class Connector:
    def __init__(self, name, number, io, *, conn=...) -> None:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def __iter__(self): # -> Generator[tuple[str, Unknown], None, None]:
        ...
    


