name: CI

on:
  push:
    branches:
      - master
      - 'feature/**'
  pull_request:
    branches:
      - master
      - 'feature/**'
  workflow_dispatch:

jobs:
  build-regression-tests:
    name: Build regression tests
    runs-on: ubuntu-latest
    container: ghcr.io/kuznia-rdzeni/riscv-toolchain:2023.10.08_v
    outputs:
        cache_hit: ${{ steps.cache-regression.outputs.cache-hit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache regression-tests
        id: cache-regression
        uses: actions/cache@v3
        env:
          cache-name: cache-regression-tests
        with:
          path: test/external/riscv-tests/test-*
          
          key: ${{ env.cache-name }}-${{ runner.os }}-${{ hashFiles(
              '**/test/external/riscv-tests/environment/**',
              '**/test/external/riscv-tests/Makefile',
              '**/.git/modules/test/external/riscv-tests/riscv-tests/HEAD',
              '**/docker/riscv-toolchain.Dockerfile'
            ) }}
          restore-keys: |
            ${{ env.cache-name }}-${{ runner.os }}-

      - if: ${{ steps.cache-regression.outputs.cache-hit != 'true' }}
        run: cd test/external/riscv-tests && make

      - if: ${{ steps.cache-regression.outputs.cache-hit != 'true' }}
        name: Upload riscv-tests
        uses: actions/upload-artifact@v3
        with:
          path: test/external/riscv-tests

  run-regression-tests:
    name: Run regression tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    container: ghcr.io/kuznia-rdzeni/verilator:v5.008-3.11
    needs: build-regression-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python3 -m venv venv
          . venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install -r requirements-dev.txt

      - name: Generate Verilog
        run: |
          . venv/bin/activate
          PYTHONHASHSEED=0 ./scripts/gen_verilog.py --verbose --config full

      - uses: actions/cache@v3
        env:
          cache-name: cache-regression-tests
        with:
          path: test/external/riscv-tests/test-*
          key: ${{ env.cache-name }}-${{ runner.os }}-${{ hashFiles(
              '**/test/external/riscv-tests/environment/**',
              '**/test/external/riscv-tests/Makefile',
              '**/.git/modules/test/external/riscv-tests/riscv-tests/HEAD',
              '**/docker/riscv-toolchain.Dockerfile'
              ) }}
          fail-on-cache-miss: true

      - name: Run tests
        run: |
          . venv/bin/activate
          scripts/run_tests.py -a regression

      - name: Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test/regression/cocotb/results.xml
          check_name: cocotb test results
          comment_mode: off

  unit-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install -r requirements-dev.txt
          sudo apt-get install -y binutils-riscv64-unknown-elf

      - name: Run tests
        run: ./scripts/run_tests.py --verbose

      - name: Check traces
        run: ./scripts/run_tests.py -t -c 1 TestCore 

  lint:
    name: Check code formatting and typing
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install -r requirements-dev.txt

      - name: Check format
        run: ./scripts/lint.sh check_format

      - name: Check types
        run: ./scripts/lint.sh check_types
